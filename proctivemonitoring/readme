# Take a look the Cluster-IP/NodePort with respect to RabbitMq in the Cluster K8s
# kubectl --namespace="test-rabbitmq"

# Remenber to use kubectl config set-context --current --namespace=test-rabbitmq
# The protocol amqp must be verified by executing "kubectl describe service rabbitmq"    --- e.g. amqp://guest:guest@172.17.0.3:5672/%2f'
# api rest
docker build -t proactivemonitoring-python-version .
docker tag proactivemonitoring-python-version californibrs/proactivemonitoring-python-version
docker push californibrs/proactivemonitoring-python-version
# (dont use -- only during developing) docker run -it --rm -p 3000:80 proactivemonitoring-python-version


## Enabling the ingress to use DNS - Minikube
minikube addons enable ingress

# Example for dashboard-ingress from minikube
# Before, it is necessary enabling the dashboard with 'minikube dashboard'
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dashboard-ingress
  namespace: kubernetes-dashboard
spec:
  rules:
  - host: dashboard.com
    http:
      paths:
      - backend:
          serviceName: kubernetes-dashboard
          servicePort: 80


# Verifying the ingress definition
kubectl get ingress -n kubernetes-dashboard

